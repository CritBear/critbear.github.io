/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 oculus_quest_2.glb -t
Author: KrostGames (https://sketchfab.com/KrostGames)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/oculus-quest-2-3bdefae06ff04297a3e694faa5121156
Title: Oculus Quest 2
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Oculus_Q2_Carcaza_0: THREE.Mesh
    Oculus_Q2_Interior_Negro_0: THREE.Mesh
    Power_Botton__0: THREE.Mesh
    Power_Botton001__0: THREE.Mesh
    ['Soporte-Lente_Negro_0']: THREE.Mesh
    ['Volumen_+_-__0']: THREE.Mesh
    Goma_Negro_0: THREE.Mesh
    Sphere001__0: THREE.Mesh
    ['Sensor-Up-Izq_Negro_0']: THREE.Mesh
    ['Sensor-Up-drc_Negro_0']: THREE.Mesh
    ['Sensor-Bajo-Izq_Negro_0']: THREE.Mesh
    ['Sensor-Bajo-drc_Negro_0']: THREE.Mesh
    ['Agarre-Lateral-drc__0']: THREE.Mesh
    ['Agarre-Lateral-izq__0']: THREE.Mesh
    Circle_OnOff_0: THREE.Mesh
    Lente_Lentes_0: THREE.Mesh
    Cube__0: THREE.Mesh
  }
  materials: {
    Carcaza: THREE.MeshStandardMaterial
    Negro: THREE.MeshStandardMaterial
    Power_Botton__0: THREE.MeshStandardMaterial
    OnOff: THREE.MeshStandardMaterial
    Lentes: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/oculus_quest_2.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group scale={0.01}>
        <mesh geometry={nodes.Oculus_Q2_Carcaza_0.geometry} material={materials.Carcaza} scale={0.3} />
        <mesh geometry={nodes.Oculus_Q2_Interior_Negro_0.geometry} material={materials.Negro} scale={0.3} />
        <mesh geometry={nodes.Power_Botton__0.geometry} material={materials.Power_Botton__0} position={[110.17, -25.67, 38.64]} rotation={[0, 0, -0.13]} scale={[0.06, 0.02, 0.02]} />
        <mesh geometry={nodes.Power_Botton001__0.geometry} material={materials.Power_Botton__0} position={[-111.51, -25.67, 38.64]} rotation={[Math.PI, 0, 3.01]} scale={[0.06, 0.02, 0.02]} />
        <mesh geometry={nodes['Soporte-Lente_Negro_0'].geometry} material={materials.Negro} rotation={[Math.PI / 2, 0, 0]} scale={0.27} />
        <mesh geometry={nodes['Volumen_+_-__0'].geometry} material={materials.Power_Botton__0} position={[-37.17, -77, 70.56]} rotation={[1.48, 1.54, 3.01]} scale={[0.05, 0.04, 0.05]} />
        <mesh geometry={nodes.Goma_Negro_0.geometry} material={materials.Negro} position={[0, 0, 2.79]} scale={0.29} />
        <mesh geometry={nodes.Sphere001__0.geometry} material={materials.Power_Botton__0} position={[0, -14.04, -94.68]} scale={1.35} />
        <mesh geometry={nodes['Sensor-Up-Izq_Negro_0'].geometry} material={materials.Negro} position={[85.08, 30.13, 85.93]} rotation={[-0.11, -0.59, 2.31]} scale={0.02} />
        <mesh geometry={nodes['Sensor-Up-drc_Negro_0'].geometry} material={materials.Negro} position={[-84.78, 30.87, 86.41]} rotation={[0.01, 0.77, -2.47]} scale={0.02} />
        <mesh geometry={nodes['Sensor-Bajo-Izq_Negro_0'].geometry} material={materials.Negro} position={[85.08, -62.07, 85.93]} rotation={[-0.32, 0.15, 0.44]} scale={0.02} />
        <mesh geometry={nodes['Sensor-Bajo-drc_Negro_0'].geometry} material={materials.Negro} position={[-86.25, -61.32, 86.04]} rotation={[0.04, 0.35, -0.84]} scale={0.02} />
        <mesh geometry={nodes['Agarre-Lateral-drc__0'].geometry} material={materials.Power_Botton__0} position={[-117.04, 0, 0]} rotation={[0, 0, Math.PI]} scale={[0.05, 0.14, 0.47]} />
        <mesh geometry={nodes['Agarre-Lateral-izq__0'].geometry} material={materials.Power_Botton__0} position={[116.51, 0, 0]} scale={[0.05, 0.14, 0.47]} />
        <mesh geometry={nodes.Circle_OnOff_0.geometry} material={materials.OnOff} position={[-109.06, -25.72, 59.73]} rotation={[0, 0, -Math.PI / 2]} scale={0.01} />
        <mesh geometry={nodes.Lente_Lentes_0.geometry} material={materials.Lentes} rotation={[Math.PI / 2, 0, 0]} scale={0.27} />
        <mesh geometry={nodes.Cube__0.geometry} material={materials.Power_Botton__0} position={[38.84, 0, -218.22]} rotation={[0.1, -0.29, 0]} scale={[0.06, 0.16, 0.05]} />
      </group>
    </group>
  )
}

useGLTF.preload('/oculus_quest_2.glb')
