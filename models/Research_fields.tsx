/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 research_fields.glb -t
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['3D_Text_1_-_R']: THREE.Mesh
    ['3D_Text_1_-_e']: THREE.Mesh
    ['3D_Text_1_-_s']: THREE.Mesh
    ['3D_Text_1_-_e_1']: THREE.Mesh
    ['3D_Text_1_-_a']: THREE.Mesh
    ['3D_Text_1_-_r']: THREE.Mesh
    ['3D_Text_1_-_c']: THREE.Mesh
    ['3D_Text_1_-_h']: THREE.Mesh
    ['3D_Text_1_-_F']: THREE.Mesh
    ['3D_Text_1_-_i']: THREE.Mesh
    ['3D_Text_1_-_e_2']: THREE.Mesh
    ['3D_Text_1_-_l']: THREE.Mesh
    ['3D_Text_1_-_d']: THREE.Mesh
    ['3D_Text_1_-_s_1']: THREE.Mesh
  }
  materials: {
    ['Concrete 1']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/research_fields.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0}>
        <mesh geometry={nodes['3D_Text_1_-_R'].geometry} material={materials['Concrete 1']} position={[-150.68, -64.4, 0]} rotation={[0, 0, Math.PI / 4]} />
        <mesh geometry={nodes['3D_Text_1_-_e'].geometry} material={materials['Concrete 1']} position={[-129.9, -43.62, 0]} rotation={[0, 0, Math.PI / 4]} />
        <mesh geometry={nodes['3D_Text_1_-_s'].geometry} material={materials['Concrete 1']} position={[-113.83, -27.55, 0]} rotation={[0, 0, Math.PI / 4]} />
        <mesh geometry={nodes['3D_Text_1_-_e_1'].geometry} material={materials['Concrete 1']} position={[-98.72, -12.44, 0]} rotation={[0, 0, Math.PI / 4]} />
        <mesh geometry={nodes['3D_Text_1_-_a'].geometry} material={materials['Concrete 1']} position={[-82.65, 3.63, 0]} rotation={[0, 0, Math.PI / 4]} />
        <mesh geometry={nodes['3D_Text_1_-_r'].geometry} material={materials['Concrete 1']} position={[-65.56, 20.72, 0]} rotation={[0, 0, Math.PI / 4]} />
        <mesh geometry={nodes['3D_Text_1_-_c'].geometry} material={materials['Concrete 1']} position={[-51.24, 35.04, 0]} rotation={[0, 0, Math.PI / 4]} />
        <mesh geometry={nodes['3D_Text_1_-_h'].geometry} material={materials['Concrete 1']} position={[-36.45, 49.83, 0]} rotation={[0, 0, Math.PI / 4]} />
        <mesh geometry={nodes['3D_Text_1_-_F'].geometry} material={materials['Concrete 1']} position={[-11.25, 75.03, 0]} rotation={[0, 0, Math.PI / 4]} />
        <mesh geometry={nodes['3D_Text_1_-_i'].geometry} material={materials['Concrete 1']} position={[6.7, 92.98, 0]} rotation={[0, 0, Math.PI / 4]} />
        <mesh geometry={nodes['3D_Text_1_-_e_2'].geometry} material={materials['Concrete 1']} position={[16.63, 102.91, 0]} rotation={[0, 0, Math.PI / 4]} />
        <mesh geometry={nodes['3D_Text_1_-_l'].geometry} material={materials['Concrete 1']} position={[32.7, 118.98, 0]} rotation={[0, 0, Math.PI / 4]} />
        <mesh geometry={nodes['3D_Text_1_-_d'].geometry} material={materials['Concrete 1']} position={[42.85, 129.13, 0]} rotation={[0, 0, Math.PI / 4]} />
        <mesh geometry={nodes['3D_Text_1_-_s_1'].geometry} material={materials['Concrete 1']} position={[60.86, 147.14, 0]} rotation={[0, 0, Math.PI / 4]} />
      </group>
    </group>
  )
}

useGLTF.preload('/research_fields.glb')
